{
  "baseURI": "http://opendj.sample.com:7070",
  "handler": {
    "type": "Chain",
    "config": {
      "filters": [
        {
          "comment": "Custom filter for OpenAM basic authentication",
          "name": "OpenAM Basic Authentication",
          "type": "ScriptableFilter",
          "config": {
            "type": "application/x-groovy",
            "file": "OpenAMBasicAuthFilter.groovy",
            "args": {
              "userId": "${request.headers['X-OpenAM-Username'][0]}",
              "password": "${request.headers['X-OpenAM-Password'][0]}",
              "openAMURL": "http://openam13.sample.com:8080/openam/json/employees/authenticate"
            }
          },
          "capture": "all"
        },
        {
          "comment": "OpenAM Authorization check filter",
          "name": "OpenAM Authorization",
          "type": "PolicyEnforcementFilter",
          "config": {
            "openamUrl": "http://openam13.sample.com:8080/openam",
            "pepUsername": "policyAdmin",
            "pepPassword": "password",
            "realm": "employees",
            "application": "OpenIG",
            "ssoTokenSubject": "${request.headers['tokenId'][0]}"
          },
          "capture": "all"
        },
        {
          "comment": "Custom filter to pass OpenDJ credentials as Authorization header",
          "name": "OpenDJ Authorization header",
          "type": "ScriptableFilter",
          "config": {
            "type": "application/x-groovy",
            "file": "BasicAuthFilter.groovy",
            "args": {
              "userId": "${request.headers['X-OpenAM-Username'][0]}",
              "password": "${request.headers['X-OpenAM-Password'][0]}"
            }
          },
          "capture": "all"
        }
      ],
      "handler": "ClientHandler"
    }
  },
  "condition": "${matches(request.uri.path, '^/opendj')}"
}